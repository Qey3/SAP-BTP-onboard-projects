
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 5.16.0
 */

package sap.example.odata.generate.namespaces.odata;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.sap.cloud.sdk.datamodel.odata.client.request.ODataEntityKey;
import com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntity;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntitySet;
import com.sap.cloud.sdk.result.ElementName;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.ToString;
import sap.example.odata.generate.services.OdataService;


/**
 * <p>Original entity name from the Odata EDM: <b>Sales_Totals_by_Amount</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.datamodel.odatav4.adapter.GsonVdmAdapterFactory.class)
@JsonSerialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectSerializer.class)
@JsonDeserialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectDeserializer.class)
public class Sales_Totals_by_Amount
    extends VdmEntity<Sales_Totals_by_Amount>
    implements VdmEntitySet
{

    @Getter
    private final java.lang.String odataType = "NorthwindModel.Sales_Totals_by_Amount";
    /**
     * Selector for all available fields of Sales_Totals_by_Amount.
     * 
     */
    public final static SimpleProperty<Sales_Totals_by_Amount> ALL_FIELDS = all();
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>SaleAmount</b></p>
     * 
     * @return
     *     The saleAmount contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("SaleAmount")
    private BigDecimal saleAmount;
    public final static SimpleProperty.NumericDecimal<Sales_Totals_by_Amount> SALE_AMOUNT = new SimpleProperty.NumericDecimal<Sales_Totals_by_Amount>(Sales_Totals_by_Amount.class, "SaleAmount");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>OrderID</b></p>
     * 
     * @return
     *     The orderID contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("OrderID")
    private Integer orderID;
    public final static SimpleProperty.NumericInteger<Sales_Totals_by_Amount> ORDER_ID = new SimpleProperty.NumericInteger<Sales_Totals_by_Amount>(Sales_Totals_by_Amount.class, "OrderID");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>CompanyName</b></p>
     * 
     * @return
     *     The companyName contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("CompanyName")
    private java.lang.String companyName;
    public final static SimpleProperty.String<Sales_Totals_by_Amount> COMPANY_NAME = new SimpleProperty.String<Sales_Totals_by_Amount>(Sales_Totals_by_Amount.class, "CompanyName");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShippedDate</b></p>
     * 
     * @return
     *     The shippedDate contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShippedDate")
    private OffsetDateTime shippedDate;
    public final static SimpleProperty.DateTime<Sales_Totals_by_Amount> SHIPPED_DATE = new SimpleProperty.DateTime<Sales_Totals_by_Amount>(Sales_Totals_by_Amount.class, "ShippedDate");

    @Nonnull
    @Override
    public Class<Sales_Totals_by_Amount> getType() {
        return Sales_Totals_by_Amount.class;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>SaleAmount</b></p>
     * 
     * @param saleAmount
     *     The saleAmount to set.
     */
    public void setSaleAmount(
        @Nullable
        final BigDecimal saleAmount) {
        rememberChangedField("SaleAmount", this.saleAmount);
        this.saleAmount = saleAmount;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>OrderID</b></p>
     * 
     * @param orderID
     *     The orderID to set.
     */
    public void setOrderID(
        @Nullable
        final Integer orderID) {
        rememberChangedField("OrderID", this.orderID);
        this.orderID = orderID;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>CompanyName</b></p>
     * 
     * @param companyName
     *     The companyName to set.
     */
    public void setCompanyName(
        @Nullable
        final java.lang.String companyName) {
        rememberChangedField("CompanyName", this.companyName);
        this.companyName = companyName;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShippedDate</b></p>
     * 
     * @param shippedDate
     *     The shippedDate to set.
     */
    public void setShippedDate(
        @Nullable
        final OffsetDateTime shippedDate) {
        rememberChangedField("ShippedDate", this.shippedDate);
        this.shippedDate = shippedDate;
    }

    @Override
    protected java.lang.String getEntityCollection() {
        return "Sales_Totals_by_Amounts";
    }

    @Nonnull
    @Override
    protected ODataEntityKey getKey() {
        final ODataEntityKey entityKey = super.getKey();
        entityKey.addKeyProperty("OrderID", getOrderID());
        entityKey.addKeyProperty("CompanyName", getCompanyName());
        return entityKey;
    }

    @Nonnull
    @Override
    protected Map<java.lang.String, Object> toMapOfFields() {
        final Map<java.lang.String, Object> cloudSdkValues = super.toMapOfFields();
        cloudSdkValues.put("SaleAmount", getSaleAmount());
        cloudSdkValues.put("OrderID", getOrderID());
        cloudSdkValues.put("CompanyName", getCompanyName());
        cloudSdkValues.put("ShippedDate", getShippedDate());
        return cloudSdkValues;
    }

    @Override
    protected void fromMap(final Map<java.lang.String, Object> inputValues) {
        final Map<java.lang.String, Object> cloudSdkValues = Maps.newLinkedHashMap(inputValues);
        // simple properties
        {
            if (cloudSdkValues.containsKey("SaleAmount")) {
                final Object value = cloudSdkValues.remove("SaleAmount");
                if ((value == null)||(!value.equals(getSaleAmount()))) {
                    setSaleAmount(((BigDecimal) value));
                }
            }
            if (cloudSdkValues.containsKey("OrderID")) {
                final Object value = cloudSdkValues.remove("OrderID");
                if ((value == null)||(!value.equals(getOrderID()))) {
                    setOrderID(((Integer) value));
                }
            }
            if (cloudSdkValues.containsKey("CompanyName")) {
                final Object value = cloudSdkValues.remove("CompanyName");
                if ((value == null)||(!value.equals(getCompanyName()))) {
                    setCompanyName(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ShippedDate")) {
                final Object value = cloudSdkValues.remove("ShippedDate");
                if ((value == null)||(!value.equals(getShippedDate()))) {
                    setShippedDate(((OffsetDateTime) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
        }
        super.fromMap(cloudSdkValues);
    }

    @Override
    protected java.lang.String getDefaultServicePath() {
        return OdataService.DEFAULT_SERVICE_PATH;
    }

}
