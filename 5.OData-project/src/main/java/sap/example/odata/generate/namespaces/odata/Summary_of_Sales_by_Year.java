
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 5.16.0
 */

package sap.example.odata.generate.namespaces.odata;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.sap.cloud.sdk.datamodel.odata.client.request.ODataEntityKey;
import com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntity;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntitySet;
import com.sap.cloud.sdk.result.ElementName;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.ToString;
import sap.example.odata.generate.services.OdataService;


/**
 * <p>Original entity name from the Odata EDM: <b>Summary_of_Sales_by_Year</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.datamodel.odatav4.adapter.GsonVdmAdapterFactory.class)
@JsonSerialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectSerializer.class)
@JsonDeserialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectDeserializer.class)
public class Summary_of_Sales_by_Year
    extends VdmEntity<Summary_of_Sales_by_Year>
    implements VdmEntitySet
{

    @Getter
    private final String odataType = "NorthwindModel.Summary_of_Sales_by_Year";
    /**
     * Selector for all available fields of Summary_of_Sales_by_Year.
     * 
     */
    public final static SimpleProperty<Summary_of_Sales_by_Year> ALL_FIELDS = all();
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShippedDate</b></p>
     * 
     * @return
     *     The shippedDate contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShippedDate")
    private OffsetDateTime shippedDate;
    public final static SimpleProperty.DateTime<Summary_of_Sales_by_Year> SHIPPED_DATE = new SimpleProperty.DateTime<Summary_of_Sales_by_Year>(Summary_of_Sales_by_Year.class, "ShippedDate");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>OrderID</b></p>
     * 
     * @return
     *     The orderID contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("OrderID")
    private Integer orderID;
    public final static SimpleProperty.NumericInteger<Summary_of_Sales_by_Year> ORDER_ID = new SimpleProperty.NumericInteger<Summary_of_Sales_by_Year>(Summary_of_Sales_by_Year.class, "OrderID");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Subtotal</b></p>
     * 
     * @return
     *     The subtotal contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Subtotal")
    private BigDecimal subtotal;
    public final static SimpleProperty.NumericDecimal<Summary_of_Sales_by_Year> SUBTOTAL = new SimpleProperty.NumericDecimal<Summary_of_Sales_by_Year>(Summary_of_Sales_by_Year.class, "Subtotal");

    @Nonnull
    @Override
    public Class<Summary_of_Sales_by_Year> getType() {
        return Summary_of_Sales_by_Year.class;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShippedDate</b></p>
     * 
     * @param shippedDate
     *     The shippedDate to set.
     */
    public void setShippedDate(
        @Nullable
        final OffsetDateTime shippedDate) {
        rememberChangedField("ShippedDate", this.shippedDate);
        this.shippedDate = shippedDate;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>OrderID</b></p>
     * 
     * @param orderID
     *     The orderID to set.
     */
    public void setOrderID(
        @Nullable
        final Integer orderID) {
        rememberChangedField("OrderID", this.orderID);
        this.orderID = orderID;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Subtotal</b></p>
     * 
     * @param subtotal
     *     The subtotal to set.
     */
    public void setSubtotal(
        @Nullable
        final BigDecimal subtotal) {
        rememberChangedField("Subtotal", this.subtotal);
        this.subtotal = subtotal;
    }

    @Override
    protected String getEntityCollection() {
        return "Summary_of_Sales_by_Years";
    }

    @Nonnull
    @Override
    protected ODataEntityKey getKey() {
        final ODataEntityKey entityKey = super.getKey();
        entityKey.addKeyProperty("OrderID", getOrderID());
        return entityKey;
    }

    @Nonnull
    @Override
    protected Map<String, Object> toMapOfFields() {
        final Map<String, Object> cloudSdkValues = super.toMapOfFields();
        cloudSdkValues.put("ShippedDate", getShippedDate());
        cloudSdkValues.put("OrderID", getOrderID());
        cloudSdkValues.put("Subtotal", getSubtotal());
        return cloudSdkValues;
    }

    @Override
    protected void fromMap(final Map<String, Object> inputValues) {
        final Map<String, Object> cloudSdkValues = Maps.newLinkedHashMap(inputValues);
        // simple properties
        {
            if (cloudSdkValues.containsKey("ShippedDate")) {
                final Object value = cloudSdkValues.remove("ShippedDate");
                if ((value == null)||(!value.equals(getShippedDate()))) {
                    setShippedDate(((OffsetDateTime) value));
                }
            }
            if (cloudSdkValues.containsKey("OrderID")) {
                final Object value = cloudSdkValues.remove("OrderID");
                if ((value == null)||(!value.equals(getOrderID()))) {
                    setOrderID(((Integer) value));
                }
            }
            if (cloudSdkValues.containsKey("Subtotal")) {
                final Object value = cloudSdkValues.remove("Subtotal");
                if ((value == null)||(!value.equals(getSubtotal()))) {
                    setSubtotal(((BigDecimal) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
        }
        super.fromMap(cloudSdkValues);
    }

    @Override
    protected String getDefaultServicePath() {
        return OdataService.DEFAULT_SERVICE_PATH;
    }

}
