
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 5.16.0
 */

package sap.example.odata.generate.namespaces.odata;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.sap.cloud.sdk.datamodel.odata.client.request.ODataEntityKey;
import com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntity;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntitySet;
import com.sap.cloud.sdk.result.ElementName;
import io.vavr.control.Option;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import sap.example.odata.generate.services.OdataService;


/**
 * <p>Original entity name from the Odata EDM: <b>Product</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.datamodel.odatav4.adapter.GsonVdmAdapterFactory.class)
@JsonSerialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectSerializer.class)
@JsonDeserialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectDeserializer.class)
public class Product
    extends VdmEntity<Product>
    implements VdmEntitySet
{

    @Getter
    private final java.lang.String odataType = "NorthwindModel.Product";
    /**
     * Selector for all available fields of Product.
     * 
     */
    public final static SimpleProperty<Product> ALL_FIELDS = all();
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>ProductID</b></p>
     * 
     * @return
     *     The productID contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ProductID")
    private Integer productID;
    public final static SimpleProperty.NumericInteger<Product> PRODUCT_ID = new SimpleProperty.NumericInteger<Product>(Product.class, "ProductID");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ProductName</b></p>
     * 
     * @return
     *     The productName contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ProductName")
    private java.lang.String productName;
    public final static SimpleProperty.String<Product> PRODUCT_NAME = new SimpleProperty.String<Product>(Product.class, "ProductName");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>SupplierID</b></p>
     * 
     * @return
     *     The supplierID contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("SupplierID")
    private Integer supplierID;
    public final static SimpleProperty.NumericInteger<Product> SUPPLIER_ID = new SimpleProperty.NumericInteger<Product>(Product.class, "SupplierID");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>CategoryID</b></p>
     * 
     * @return
     *     The categoryID contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("CategoryID")
    private Integer categoryID;
    public final static SimpleProperty.NumericInteger<Product> CATEGORY_ID = new SimpleProperty.NumericInteger<Product>(Product.class, "CategoryID");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>QuantityPerUnit</b></p>
     * 
     * @return
     *     The quantityPerUnit contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("QuantityPerUnit")
    private java.lang.String quantityPerUnit;
    public final static SimpleProperty.String<Product> QUANTITY_PER_UNIT = new SimpleProperty.String<Product>(Product.class, "QuantityPerUnit");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>UnitPrice</b></p>
     * 
     * @return
     *     The unitPrice contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("UnitPrice")
    private BigDecimal unitPrice;
    public final static SimpleProperty.NumericDecimal<Product> UNIT_PRICE = new SimpleProperty.NumericDecimal<Product>(Product.class, "UnitPrice");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>UnitsInStock</b></p>
     * 
     * @return
     *     The unitsInStock contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("UnitsInStock")
    private Short unitsInStock;
    public final static SimpleProperty.NumericInteger<Product> UNITS_IN_STOCK = new SimpleProperty.NumericInteger<Product>(Product.class, "UnitsInStock");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>UnitsOnOrder</b></p>
     * 
     * @return
     *     The unitsOnOrder contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("UnitsOnOrder")
    private Short unitsOnOrder;
    public final static SimpleProperty.NumericInteger<Product> UNITS_ON_ORDER = new SimpleProperty.NumericInteger<Product>(Product.class, "UnitsOnOrder");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ReorderLevel</b></p>
     * 
     * @return
     *     The reorderLevel contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ReorderLevel")
    private Short reorderLevel;
    public final static SimpleProperty.NumericInteger<Product> REORDER_LEVEL = new SimpleProperty.NumericInteger<Product>(Product.class, "ReorderLevel");
    /**
     * Constraints: Not nullable<p>Original property name from the Odata EDM: <b>Discontinued</b></p>
     * 
     * @return
     *     The discontinued contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Discontinued")
    private java.lang.Boolean discontinued;
    public final static SimpleProperty.Boolean<Product> DISCONTINUED = new SimpleProperty.Boolean<Product>(Product.class, "Discontinued");
    /**
     * Navigation property <b>Category</b> for <b>Product</b> to single <b>Category</b>.
     * 
     */
    @ElementName("Category")
    @Nullable
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private Category toCategory;
    /**
     * Navigation property <b>Order_Details</b> for <b>Product</b> to multiple <b>Order_Detail</b>.
     * 
     */
    @ElementName("Order_Details")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<Order_Detail> toOrder_Details;
    /**
     * Navigation property <b>Supplier</b> for <b>Product</b> to single <b>Supplier</b>.
     * 
     */
    @ElementName("Supplier")
    @Nullable
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private Supplier toSupplier;
    /**
     * Use with available request builders to apply the <b>Category</b> navigation property to query operations.
     * 
     */
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Single<Product, Category> TO_CATEGORY = new com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Single<Product, Category>(Product.class, "Category", Category.class);
    /**
     * Use with available request builders to apply the <b>Order_Details</b> navigation property to query operations.
     * 
     */
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Collection<Product, Order_Detail> TO_ORDER_DETAILS = new com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Collection<Product, Order_Detail>(Product.class, "Order_Details", Order_Detail.class);
    /**
     * Use with available request builders to apply the <b>Supplier</b> navigation property to query operations.
     * 
     */
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Single<Product, Supplier> TO_SUPPLIER = new com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Single<Product, Supplier>(Product.class, "Supplier", Supplier.class);

    @Nonnull
    @Override
    public Class<Product> getType() {
        return Product.class;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>ProductID</b></p>
     * 
     * @param productID
     *     The productID to set.
     */
    public void setProductID(
        @Nullable
        final Integer productID) {
        rememberChangedField("ProductID", this.productID);
        this.productID = productID;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ProductName</b></p>
     * 
     * @param productName
     *     The productName to set.
     */
    public void setProductName(
        @Nullable
        final java.lang.String productName) {
        rememberChangedField("ProductName", this.productName);
        this.productName = productName;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>SupplierID</b></p>
     * 
     * @param supplierID
     *     The supplierID to set.
     */
    public void setSupplierID(
        @Nullable
        final Integer supplierID) {
        rememberChangedField("SupplierID", this.supplierID);
        this.supplierID = supplierID;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>CategoryID</b></p>
     * 
     * @param categoryID
     *     The categoryID to set.
     */
    public void setCategoryID(
        @Nullable
        final Integer categoryID) {
        rememberChangedField("CategoryID", this.categoryID);
        this.categoryID = categoryID;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>QuantityPerUnit</b></p>
     * 
     * @param quantityPerUnit
     *     The quantityPerUnit to set.
     */
    public void setQuantityPerUnit(
        @Nullable
        final java.lang.String quantityPerUnit) {
        rememberChangedField("QuantityPerUnit", this.quantityPerUnit);
        this.quantityPerUnit = quantityPerUnit;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>UnitPrice</b></p>
     * 
     * @param unitPrice
     *     The unitPrice to set.
     */
    public void setUnitPrice(
        @Nullable
        final BigDecimal unitPrice) {
        rememberChangedField("UnitPrice", this.unitPrice);
        this.unitPrice = unitPrice;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>UnitsInStock</b></p>
     * 
     * @param unitsInStock
     *     The unitsInStock to set.
     */
    public void setUnitsInStock(
        @Nullable
        final Short unitsInStock) {
        rememberChangedField("UnitsInStock", this.unitsInStock);
        this.unitsInStock = unitsInStock;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>UnitsOnOrder</b></p>
     * 
     * @param unitsOnOrder
     *     The unitsOnOrder to set.
     */
    public void setUnitsOnOrder(
        @Nullable
        final Short unitsOnOrder) {
        rememberChangedField("UnitsOnOrder", this.unitsOnOrder);
        this.unitsOnOrder = unitsOnOrder;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ReorderLevel</b></p>
     * 
     * @param reorderLevel
     *     The reorderLevel to set.
     */
    public void setReorderLevel(
        @Nullable
        final Short reorderLevel) {
        rememberChangedField("ReorderLevel", this.reorderLevel);
        this.reorderLevel = reorderLevel;
    }

    /**
     * Constraints: Not nullable<p>Original property name from the Odata EDM: <b>Discontinued</b></p>
     * 
     * @param discontinued
     *     The discontinued to set.
     */
    public void setDiscontinued(
        @Nullable
        final java.lang.Boolean discontinued) {
        rememberChangedField("Discontinued", this.discontinued);
        this.discontinued = discontinued;
    }

    @Override
    protected java.lang.String getEntityCollection() {
        return "Products";
    }

    @Nonnull
    @Override
    protected ODataEntityKey getKey() {
        final ODataEntityKey entityKey = super.getKey();
        entityKey.addKeyProperty("ProductID", getProductID());
        return entityKey;
    }

    @Nonnull
    @Override
    protected Map<java.lang.String, Object> toMapOfFields() {
        final Map<java.lang.String, Object> cloudSdkValues = super.toMapOfFields();
        cloudSdkValues.put("ProductID", getProductID());
        cloudSdkValues.put("ProductName", getProductName());
        cloudSdkValues.put("SupplierID", getSupplierID());
        cloudSdkValues.put("CategoryID", getCategoryID());
        cloudSdkValues.put("QuantityPerUnit", getQuantityPerUnit());
        cloudSdkValues.put("UnitPrice", getUnitPrice());
        cloudSdkValues.put("UnitsInStock", getUnitsInStock());
        cloudSdkValues.put("UnitsOnOrder", getUnitsOnOrder());
        cloudSdkValues.put("ReorderLevel", getReorderLevel());
        cloudSdkValues.put("Discontinued", getDiscontinued());
        return cloudSdkValues;
    }

    @Override
    protected void fromMap(final Map<java.lang.String, Object> inputValues) {
        final Map<java.lang.String, Object> cloudSdkValues = Maps.newLinkedHashMap(inputValues);
        // simple properties
        {
            if (cloudSdkValues.containsKey("ProductID")) {
                final Object value = cloudSdkValues.remove("ProductID");
                if ((value == null)||(!value.equals(getProductID()))) {
                    setProductID(((Integer) value));
                }
            }
            if (cloudSdkValues.containsKey("ProductName")) {
                final Object value = cloudSdkValues.remove("ProductName");
                if ((value == null)||(!value.equals(getProductName()))) {
                    setProductName(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("SupplierID")) {
                final Object value = cloudSdkValues.remove("SupplierID");
                if ((value == null)||(!value.equals(getSupplierID()))) {
                    setSupplierID(((Integer) value));
                }
            }
            if (cloudSdkValues.containsKey("CategoryID")) {
                final Object value = cloudSdkValues.remove("CategoryID");
                if ((value == null)||(!value.equals(getCategoryID()))) {
                    setCategoryID(((Integer) value));
                }
            }
            if (cloudSdkValues.containsKey("QuantityPerUnit")) {
                final Object value = cloudSdkValues.remove("QuantityPerUnit");
                if ((value == null)||(!value.equals(getQuantityPerUnit()))) {
                    setQuantityPerUnit(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("UnitPrice")) {
                final Object value = cloudSdkValues.remove("UnitPrice");
                if ((value == null)||(!value.equals(getUnitPrice()))) {
                    setUnitPrice(((BigDecimal) value));
                }
            }
            if (cloudSdkValues.containsKey("UnitsInStock")) {
                final Object value = cloudSdkValues.remove("UnitsInStock");
                if ((value == null)||(!value.equals(getUnitsInStock()))) {
                    setUnitsInStock(((Short) value));
                }
            }
            if (cloudSdkValues.containsKey("UnitsOnOrder")) {
                final Object value = cloudSdkValues.remove("UnitsOnOrder");
                if ((value == null)||(!value.equals(getUnitsOnOrder()))) {
                    setUnitsOnOrder(((Short) value));
                }
            }
            if (cloudSdkValues.containsKey("ReorderLevel")) {
                final Object value = cloudSdkValues.remove("ReorderLevel");
                if ((value == null)||(!value.equals(getReorderLevel()))) {
                    setReorderLevel(((Short) value));
                }
            }
            if (cloudSdkValues.containsKey("Discontinued")) {
                final Object value = cloudSdkValues.remove("Discontinued");
                if ((value == null)||(!value.equals(getDiscontinued()))) {
                    setDiscontinued(((java.lang.Boolean) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
            if ((cloudSdkValues).containsKey("Category")) {
                final Object cloudSdkValue = (cloudSdkValues).remove("Category");
                if (cloudSdkValue instanceof Map) {
                    if (toCategory == null) {
                        toCategory = new Category();
                    }
                    @SuppressWarnings("unchecked")
                    final Map<java.lang.String, Object> inputMap = ((Map<java.lang.String, Object> ) cloudSdkValue);
                    toCategory.fromMap(inputMap);
                }
            }
            if ((cloudSdkValues).containsKey("Order_Details")) {
                final Object cloudSdkValue = (cloudSdkValues).remove("Order_Details");
                if (cloudSdkValue instanceof Iterable) {
                    if (toOrder_Details == null) {
                        toOrder_Details = Lists.newArrayList();
                    } else {
                        toOrder_Details = Lists.newArrayList(toOrder_Details);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) cloudSdkValue)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        Order_Detail entity;
                        if (toOrder_Details.size()>i) {
                            entity = toOrder_Details.get(i);
                        } else {
                            entity = new Order_Detail();
                            toOrder_Details.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<java.lang.String, Object> inputMap = ((Map<java.lang.String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((cloudSdkValues).containsKey("Supplier")) {
                final Object cloudSdkValue = (cloudSdkValues).remove("Supplier");
                if (cloudSdkValue instanceof Map) {
                    if (toSupplier == null) {
                        toSupplier = new Supplier();
                    }
                    @SuppressWarnings("unchecked")
                    final Map<java.lang.String, Object> inputMap = ((Map<java.lang.String, Object> ) cloudSdkValue);
                    toSupplier.fromMap(inputMap);
                }
            }
        }
        super.fromMap(cloudSdkValues);
    }

    @Override
    protected java.lang.String getDefaultServicePath() {
        return OdataService.DEFAULT_SERVICE_PATH;
    }

    @Nonnull
    @Override
    protected Map<java.lang.String, Object> toMapOfNavigationProperties() {
        final Map<java.lang.String, Object> cloudSdkValues = super.toMapOfNavigationProperties();
        if (toCategory!= null) {
            (cloudSdkValues).put("Category", toCategory);
        }
        if (toOrder_Details!= null) {
            (cloudSdkValues).put("Order_Details", toOrder_Details);
        }
        if (toSupplier!= null) {
            (cloudSdkValues).put("Supplier", toSupplier);
        }
        return cloudSdkValues;
    }

    /**
     * Retrieval of associated <b>Category</b> entity (one to one). This corresponds to the OData navigation property <b>Category</b>.
     * <p>
     * If the navigation property for an entity <b>Product</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>Category</b> is already loaded, the result will contain the <b>Category</b> entity. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<Category> getCategoryIfPresent() {
        return Option.of(toCategory);
    }

    /**
     * Overwrites the associated <b>Category</b> entity for the loaded navigation property <b>Category</b>.
     * 
     * @param cloudSdkValue
     *     New <b>Category</b> entity.
     */
    public void setCategory(final Category cloudSdkValue) {
        toCategory = cloudSdkValue;
    }

    /**
     * Retrieval of associated <b>Order_Detail</b> entities (one to many). This corresponds to the OData navigation property <b>Order_Details</b>.
     * <p>
     * If the navigation property for an entity <b>Product</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>Order_Details</b> is already loaded, the result will contain the <b>Order_Detail</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<Order_Detail>> getOrder_DetailsIfPresent() {
        return Option.of(toOrder_Details);
    }

    /**
     * Overwrites the list of associated <b>Order_Detail</b> entities for the loaded navigation property <b>Order_Details</b>.
     * <p>
     * If the navigation property <b>Order_Details</b> of a queried <b>Product</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param cloudSdkValue
     *     List of <b>Order_Detail</b> entities.
     */
    public void setOrder_Details(
        @Nonnull
        final List<Order_Detail> cloudSdkValue) {
        if (toOrder_Details == null) {
            toOrder_Details = Lists.newArrayList();
        }
        toOrder_Details.clear();
        toOrder_Details.addAll(cloudSdkValue);
    }

    /**
     * Adds elements to the list of associated <b>Order_Detail</b> entities. This corresponds to the OData navigation property <b>Order_Details</b>.
     * <p>
     * If the navigation property <b>Order_Details</b> of a queried <b>Product</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>Order_Detail</b> entities.
     */
    public void addOrder_Details(Order_Detail... entity) {
        if (toOrder_Details == null) {
            toOrder_Details = Lists.newArrayList();
        }
        toOrder_Details.addAll(Lists.newArrayList(entity));
    }

    /**
     * Retrieval of associated <b>Supplier</b> entity (one to one). This corresponds to the OData navigation property <b>Supplier</b>.
     * <p>
     * If the navigation property for an entity <b>Product</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>Supplier</b> is already loaded, the result will contain the <b>Supplier</b> entity. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<Supplier> getSupplierIfPresent() {
        return Option.of(toSupplier);
    }

    /**
     * Overwrites the associated <b>Supplier</b> entity for the loaded navigation property <b>Supplier</b>.
     * 
     * @param cloudSdkValue
     *     New <b>Supplier</b> entity.
     */
    public void setSupplier(final Supplier cloudSdkValue) {
        toSupplier = cloudSdkValue;
    }


    /**
     * Helper class to allow for fluent creation of Product instances.
     * 
     */
    public final static class ProductBuilder {

        private Category toCategory;
        private List<Order_Detail> toOrder_Details = Lists.newArrayList();
        private Supplier toSupplier;

        private Product.ProductBuilder toCategory(final Category cloudSdkValue) {
            toCategory = cloudSdkValue;
            return this;
        }

        /**
         * Navigation property <b>Category</b> for <b>Product</b> to single <b>Category</b>.
         * 
         * @param cloudSdkValue
         *     The Category to build this Product with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public Product.ProductBuilder category(final Category cloudSdkValue) {
            return toCategory(cloudSdkValue);
        }

        private Product.ProductBuilder toOrder_Details(final List<Order_Detail> cloudSdkValue) {
            toOrder_Details.addAll(cloudSdkValue);
            return this;
        }

        /**
         * Navigation property <b>Order_Details</b> for <b>Product</b> to multiple <b>Order_Detail</b>.
         * 
         * @param cloudSdkValue
         *     The Order_Details to build this Product with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public Product.ProductBuilder order_Details(Order_Detail... cloudSdkValue) {
            return toOrder_Details(Lists.newArrayList(cloudSdkValue));
        }

        private Product.ProductBuilder toSupplier(final Supplier cloudSdkValue) {
            toSupplier = cloudSdkValue;
            return this;
        }

        /**
         * Navigation property <b>Supplier</b> for <b>Product</b> to single <b>Supplier</b>.
         * 
         * @param cloudSdkValue
         *     The Supplier to build this Product with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public Product.ProductBuilder supplier(final Supplier cloudSdkValue) {
            return toSupplier(cloudSdkValue);
        }

    }

}
