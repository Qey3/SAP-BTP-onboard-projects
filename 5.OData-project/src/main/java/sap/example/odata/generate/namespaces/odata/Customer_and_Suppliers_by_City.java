
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 5.16.0
 */

package sap.example.odata.generate.namespaces.odata;

import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.sap.cloud.sdk.datamodel.odata.client.request.ODataEntityKey;
import com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntity;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntitySet;
import com.sap.cloud.sdk.result.ElementName;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.ToString;
import sap.example.odata.generate.services.OdataService;


/**
 * <p>Original entity name from the Odata EDM: <b>Customer_and_Suppliers_by_City</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.datamodel.odatav4.adapter.GsonVdmAdapterFactory.class)
@JsonSerialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectSerializer.class)
@JsonDeserialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectDeserializer.class)
public class Customer_and_Suppliers_by_City
    extends VdmEntity<Customer_and_Suppliers_by_City>
    implements VdmEntitySet
{

    @Getter
    private final java.lang.String odataType = "NorthwindModel.Customer_and_Suppliers_by_City";
    /**
     * Selector for all available fields of Customer_and_Suppliers_by_City.
     * 
     */
    public final static SimpleProperty<Customer_and_Suppliers_by_City> ALL_FIELDS = all();
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>City</b></p>
     * 
     * @return
     *     The city contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("City")
    private java.lang.String city;
    public final static SimpleProperty.String<Customer_and_Suppliers_by_City> CITY = new SimpleProperty.String<Customer_and_Suppliers_by_City>(Customer_and_Suppliers_by_City.class, "City");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>CompanyName</b></p>
     * 
     * @return
     *     The companyName contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("CompanyName")
    private java.lang.String companyName;
    public final static SimpleProperty.String<Customer_and_Suppliers_by_City> COMPANY_NAME = new SimpleProperty.String<Customer_and_Suppliers_by_City>(Customer_and_Suppliers_by_City.class, "CompanyName");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ContactName</b></p>
     * 
     * @return
     *     The contactName contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ContactName")
    private java.lang.String contactName;
    public final static SimpleProperty.String<Customer_and_Suppliers_by_City> CONTACT_NAME = new SimpleProperty.String<Customer_and_Suppliers_by_City>(Customer_and_Suppliers_by_City.class, "ContactName");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>Relationship</b></p>
     * 
     * @return
     *     The relationship contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Relationship")
    private java.lang.String relationship;
    public final static SimpleProperty.String<Customer_and_Suppliers_by_City> RELATIONSHIP = new SimpleProperty.String<Customer_and_Suppliers_by_City>(Customer_and_Suppliers_by_City.class, "Relationship");

    @Nonnull
    @Override
    public Class<Customer_and_Suppliers_by_City> getType() {
        return Customer_and_Suppliers_by_City.class;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>City</b></p>
     * 
     * @param city
     *     The city to set.
     */
    public void setCity(
        @Nullable
        final java.lang.String city) {
        rememberChangedField("City", this.city);
        this.city = city;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>CompanyName</b></p>
     * 
     * @param companyName
     *     The companyName to set.
     */
    public void setCompanyName(
        @Nullable
        final java.lang.String companyName) {
        rememberChangedField("CompanyName", this.companyName);
        this.companyName = companyName;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ContactName</b></p>
     * 
     * @param contactName
     *     The contactName to set.
     */
    public void setContactName(
        @Nullable
        final java.lang.String contactName) {
        rememberChangedField("ContactName", this.contactName);
        this.contactName = contactName;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>Relationship</b></p>
     * 
     * @param relationship
     *     The relationship to set.
     */
    public void setRelationship(
        @Nullable
        final java.lang.String relationship) {
        rememberChangedField("Relationship", this.relationship);
        this.relationship = relationship;
    }

    @Override
    protected java.lang.String getEntityCollection() {
        return "Customer_and_Suppliers_by_Cities";
    }

    @Nonnull
    @Override
    protected ODataEntityKey getKey() {
        final ODataEntityKey entityKey = super.getKey();
        entityKey.addKeyProperty("CompanyName", getCompanyName());
        entityKey.addKeyProperty("Relationship", getRelationship());
        return entityKey;
    }

    @Nonnull
    @Override
    protected Map<java.lang.String, Object> toMapOfFields() {
        final Map<java.lang.String, Object> cloudSdkValues = super.toMapOfFields();
        cloudSdkValues.put("City", getCity());
        cloudSdkValues.put("CompanyName", getCompanyName());
        cloudSdkValues.put("ContactName", getContactName());
        cloudSdkValues.put("Relationship", getRelationship());
        return cloudSdkValues;
    }

    @Override
    protected void fromMap(final Map<java.lang.String, Object> inputValues) {
        final Map<java.lang.String, Object> cloudSdkValues = Maps.newLinkedHashMap(inputValues);
        // simple properties
        {
            if (cloudSdkValues.containsKey("City")) {
                final Object value = cloudSdkValues.remove("City");
                if ((value == null)||(!value.equals(getCity()))) {
                    setCity(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("CompanyName")) {
                final Object value = cloudSdkValues.remove("CompanyName");
                if ((value == null)||(!value.equals(getCompanyName()))) {
                    setCompanyName(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ContactName")) {
                final Object value = cloudSdkValues.remove("ContactName");
                if ((value == null)||(!value.equals(getContactName()))) {
                    setContactName(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("Relationship")) {
                final Object value = cloudSdkValues.remove("Relationship");
                if ((value == null)||(!value.equals(getRelationship()))) {
                    setRelationship(((java.lang.String) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
        }
        super.fromMap(cloudSdkValues);
    }

    @Override
    protected java.lang.String getDefaultServicePath() {
        return OdataService.DEFAULT_SERVICE_PATH;
    }

}
