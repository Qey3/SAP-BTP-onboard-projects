
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 5.16.0
 */

package sap.example.odata.generate.namespaces.odata;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.sap.cloud.sdk.datamodel.odata.client.request.ODataEntityKey;
import com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntity;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntitySet;
import com.sap.cloud.sdk.result.ElementName;
import io.vavr.control.Option;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import sap.example.odata.generate.services.OdataService;


/**
 * <p>Original entity name from the Odata EDM: <b>Order</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.datamodel.odatav4.adapter.GsonVdmAdapterFactory.class)
@JsonSerialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectSerializer.class)
@JsonDeserialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectDeserializer.class)
public class Order
    extends VdmEntity<Order>
    implements VdmEntitySet
{

    @Getter
    private final java.lang.String odataType = "NorthwindModel.Order";
    /**
     * Selector for all available fields of Order.
     * 
     */
    public final static SimpleProperty<Order> ALL_FIELDS = all();
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>OrderID</b></p>
     * 
     * @return
     *     The orderID contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("OrderID")
    private Integer orderID;
    public final static SimpleProperty.NumericInteger<Order> ORDER_ID = new SimpleProperty.NumericInteger<Order>(Order.class, "OrderID");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>CustomerID</b></p>
     * 
     * @return
     *     The customerID contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("CustomerID")
    private java.lang.String customerID;
    public final static SimpleProperty.String<Order> CUSTOMER_ID = new SimpleProperty.String<Order>(Order.class, "CustomerID");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>EmployeeID</b></p>
     * 
     * @return
     *     The employeeID contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("EmployeeID")
    private Integer employeeID;
    public final static SimpleProperty.NumericInteger<Order> EMPLOYEE_ID = new SimpleProperty.NumericInteger<Order>(Order.class, "EmployeeID");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>OrderDate</b></p>
     * 
     * @return
     *     The orderDate contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("OrderDate")
    private OffsetDateTime orderDate;
    public final static SimpleProperty.DateTime<Order> ORDER_DATE = new SimpleProperty.DateTime<Order>(Order.class, "OrderDate");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>RequiredDate</b></p>
     * 
     * @return
     *     The requiredDate contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("RequiredDate")
    private OffsetDateTime requiredDate;
    public final static SimpleProperty.DateTime<Order> REQUIRED_DATE = new SimpleProperty.DateTime<Order>(Order.class, "RequiredDate");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShippedDate</b></p>
     * 
     * @return
     *     The shippedDate contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShippedDate")
    private OffsetDateTime shippedDate;
    public final static SimpleProperty.DateTime<Order> SHIPPED_DATE = new SimpleProperty.DateTime<Order>(Order.class, "ShippedDate");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipVia</b></p>
     * 
     * @return
     *     The shipVia contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipVia")
    private Integer shipVia;
    public final static SimpleProperty.NumericInteger<Order> SHIP_VIA = new SimpleProperty.NumericInteger<Order>(Order.class, "ShipVia");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Freight</b></p>
     * 
     * @return
     *     The freight contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Freight")
    private BigDecimal freight;
    public final static SimpleProperty.NumericDecimal<Order> FREIGHT = new SimpleProperty.NumericDecimal<Order>(Order.class, "Freight");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipName</b></p>
     * 
     * @return
     *     The shipName contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipName")
    private java.lang.String shipName;
    public final static SimpleProperty.String<Order> SHIP_NAME = new SimpleProperty.String<Order>(Order.class, "ShipName");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipAddress</b></p>
     * 
     * @return
     *     The shipAddress contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipAddress")
    private java.lang.String shipAddress;
    public final static SimpleProperty.String<Order> SHIP_ADDRESS = new SimpleProperty.String<Order>(Order.class, "ShipAddress");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipCity</b></p>
     * 
     * @return
     *     The shipCity contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipCity")
    private java.lang.String shipCity;
    public final static SimpleProperty.String<Order> SHIP_CITY = new SimpleProperty.String<Order>(Order.class, "ShipCity");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipRegion</b></p>
     * 
     * @return
     *     The shipRegion contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipRegion")
    private java.lang.String shipRegion;
    public final static SimpleProperty.String<Order> SHIP_REGION = new SimpleProperty.String<Order>(Order.class, "ShipRegion");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipPostalCode</b></p>
     * 
     * @return
     *     The shipPostalCode contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipPostalCode")
    private java.lang.String shipPostalCode;
    public final static SimpleProperty.String<Order> SHIP_POSTAL_CODE = new SimpleProperty.String<Order>(Order.class, "ShipPostalCode");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipCountry</b></p>
     * 
     * @return
     *     The shipCountry contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipCountry")
    private java.lang.String shipCountry;
    public final static SimpleProperty.String<Order> SHIP_COUNTRY = new SimpleProperty.String<Order>(Order.class, "ShipCountry");
    /**
     * Navigation property <b>Customer</b> for <b>Order</b> to single <b>Customer</b>.
     * 
     */
    @ElementName("Customer")
    @Nullable
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private Customer toCustomer;
    /**
     * Navigation property <b>Employee</b> for <b>Order</b> to single <b>Employee</b>.
     * 
     */
    @ElementName("Employee")
    @Nullable
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private Employee toEmployee;
    /**
     * Navigation property <b>Order_Details</b> for <b>Order</b> to multiple <b>Order_Detail</b>.
     * 
     */
    @ElementName("Order_Details")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<Order_Detail> toOrder_Details;
    /**
     * Navigation property <b>Shipper</b> for <b>Order</b> to single <b>Shipper</b>.
     * 
     */
    @ElementName("Shipper")
    @Nullable
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private Shipper toShipper;
    /**
     * Use with available request builders to apply the <b>Customer</b> navigation property to query operations.
     * 
     */
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Single<Order, Customer> TO_CUSTOMER = new com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Single<Order, Customer>(Order.class, "Customer", Customer.class);
    /**
     * Use with available request builders to apply the <b>Employee</b> navigation property to query operations.
     * 
     */
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Single<Order, Employee> TO_EMPLOYEE = new com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Single<Order, Employee>(Order.class, "Employee", Employee.class);
    /**
     * Use with available request builders to apply the <b>Order_Details</b> navigation property to query operations.
     * 
     */
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Collection<Order, Order_Detail> TO_ORDER_DETAILS = new com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Collection<Order, Order_Detail>(Order.class, "Order_Details", Order_Detail.class);
    /**
     * Use with available request builders to apply the <b>Shipper</b> navigation property to query operations.
     * 
     */
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Single<Order, Shipper> TO_SHIPPER = new com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Single<Order, Shipper>(Order.class, "Shipper", Shipper.class);

    @Nonnull
    @Override
    public Class<Order> getType() {
        return Order.class;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>OrderID</b></p>
     * 
     * @param orderID
     *     The orderID to set.
     */
    public void setOrderID(
        @Nullable
        final Integer orderID) {
        rememberChangedField("OrderID", this.orderID);
        this.orderID = orderID;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>CustomerID</b></p>
     * 
     * @param customerID
     *     The customerID to set.
     */
    public void setCustomerID(
        @Nullable
        final java.lang.String customerID) {
        rememberChangedField("CustomerID", this.customerID);
        this.customerID = customerID;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>EmployeeID</b></p>
     * 
     * @param employeeID
     *     The employeeID to set.
     */
    public void setEmployeeID(
        @Nullable
        final Integer employeeID) {
        rememberChangedField("EmployeeID", this.employeeID);
        this.employeeID = employeeID;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>OrderDate</b></p>
     * 
     * @param orderDate
     *     The orderDate to set.
     */
    public void setOrderDate(
        @Nullable
        final OffsetDateTime orderDate) {
        rememberChangedField("OrderDate", this.orderDate);
        this.orderDate = orderDate;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>RequiredDate</b></p>
     * 
     * @param requiredDate
     *     The requiredDate to set.
     */
    public void setRequiredDate(
        @Nullable
        final OffsetDateTime requiredDate) {
        rememberChangedField("RequiredDate", this.requiredDate);
        this.requiredDate = requiredDate;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShippedDate</b></p>
     * 
     * @param shippedDate
     *     The shippedDate to set.
     */
    public void setShippedDate(
        @Nullable
        final OffsetDateTime shippedDate) {
        rememberChangedField("ShippedDate", this.shippedDate);
        this.shippedDate = shippedDate;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipVia</b></p>
     * 
     * @param shipVia
     *     The shipVia to set.
     */
    public void setShipVia(
        @Nullable
        final Integer shipVia) {
        rememberChangedField("ShipVia", this.shipVia);
        this.shipVia = shipVia;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Freight</b></p>
     * 
     * @param freight
     *     The freight to set.
     */
    public void setFreight(
        @Nullable
        final BigDecimal freight) {
        rememberChangedField("Freight", this.freight);
        this.freight = freight;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipName</b></p>
     * 
     * @param shipName
     *     The shipName to set.
     */
    public void setShipName(
        @Nullable
        final java.lang.String shipName) {
        rememberChangedField("ShipName", this.shipName);
        this.shipName = shipName;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipAddress</b></p>
     * 
     * @param shipAddress
     *     The shipAddress to set.
     */
    public void setShipAddress(
        @Nullable
        final java.lang.String shipAddress) {
        rememberChangedField("ShipAddress", this.shipAddress);
        this.shipAddress = shipAddress;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipCity</b></p>
     * 
     * @param shipCity
     *     The shipCity to set.
     */
    public void setShipCity(
        @Nullable
        final java.lang.String shipCity) {
        rememberChangedField("ShipCity", this.shipCity);
        this.shipCity = shipCity;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipRegion</b></p>
     * 
     * @param shipRegion
     *     The shipRegion to set.
     */
    public void setShipRegion(
        @Nullable
        final java.lang.String shipRegion) {
        rememberChangedField("ShipRegion", this.shipRegion);
        this.shipRegion = shipRegion;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipPostalCode</b></p>
     * 
     * @param shipPostalCode
     *     The shipPostalCode to set.
     */
    public void setShipPostalCode(
        @Nullable
        final java.lang.String shipPostalCode) {
        rememberChangedField("ShipPostalCode", this.shipPostalCode);
        this.shipPostalCode = shipPostalCode;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipCountry</b></p>
     * 
     * @param shipCountry
     *     The shipCountry to set.
     */
    public void setShipCountry(
        @Nullable
        final java.lang.String shipCountry) {
        rememberChangedField("ShipCountry", this.shipCountry);
        this.shipCountry = shipCountry;
    }

    @Override
    protected java.lang.String getEntityCollection() {
        return "Orders";
    }

    @Nonnull
    @Override
    protected ODataEntityKey getKey() {
        final ODataEntityKey entityKey = super.getKey();
        entityKey.addKeyProperty("OrderID", getOrderID());
        return entityKey;
    }

    @Nonnull
    @Override
    protected Map<java.lang.String, Object> toMapOfFields() {
        final Map<java.lang.String, Object> cloudSdkValues = super.toMapOfFields();
        cloudSdkValues.put("OrderID", getOrderID());
        cloudSdkValues.put("CustomerID", getCustomerID());
        cloudSdkValues.put("EmployeeID", getEmployeeID());
        cloudSdkValues.put("OrderDate", getOrderDate());
        cloudSdkValues.put("RequiredDate", getRequiredDate());
        cloudSdkValues.put("ShippedDate", getShippedDate());
        cloudSdkValues.put("ShipVia", getShipVia());
        cloudSdkValues.put("Freight", getFreight());
        cloudSdkValues.put("ShipName", getShipName());
        cloudSdkValues.put("ShipAddress", getShipAddress());
        cloudSdkValues.put("ShipCity", getShipCity());
        cloudSdkValues.put("ShipRegion", getShipRegion());
        cloudSdkValues.put("ShipPostalCode", getShipPostalCode());
        cloudSdkValues.put("ShipCountry", getShipCountry());
        return cloudSdkValues;
    }

    @Override
    protected void fromMap(final Map<java.lang.String, Object> inputValues) {
        final Map<java.lang.String, Object> cloudSdkValues = Maps.newLinkedHashMap(inputValues);
        // simple properties
        {
            if (cloudSdkValues.containsKey("OrderID")) {
                final Object value = cloudSdkValues.remove("OrderID");
                if ((value == null)||(!value.equals(getOrderID()))) {
                    setOrderID(((Integer) value));
                }
            }
            if (cloudSdkValues.containsKey("CustomerID")) {
                final Object value = cloudSdkValues.remove("CustomerID");
                if ((value == null)||(!value.equals(getCustomerID()))) {
                    setCustomerID(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("EmployeeID")) {
                final Object value = cloudSdkValues.remove("EmployeeID");
                if ((value == null)||(!value.equals(getEmployeeID()))) {
                    setEmployeeID(((Integer) value));
                }
            }
            if (cloudSdkValues.containsKey("OrderDate")) {
                final Object value = cloudSdkValues.remove("OrderDate");
                if ((value == null)||(!value.equals(getOrderDate()))) {
                    setOrderDate(((OffsetDateTime) value));
                }
            }
            if (cloudSdkValues.containsKey("RequiredDate")) {
                final Object value = cloudSdkValues.remove("RequiredDate");
                if ((value == null)||(!value.equals(getRequiredDate()))) {
                    setRequiredDate(((OffsetDateTime) value));
                }
            }
            if (cloudSdkValues.containsKey("ShippedDate")) {
                final Object value = cloudSdkValues.remove("ShippedDate");
                if ((value == null)||(!value.equals(getShippedDate()))) {
                    setShippedDate(((OffsetDateTime) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipVia")) {
                final Object value = cloudSdkValues.remove("ShipVia");
                if ((value == null)||(!value.equals(getShipVia()))) {
                    setShipVia(((Integer) value));
                }
            }
            if (cloudSdkValues.containsKey("Freight")) {
                final Object value = cloudSdkValues.remove("Freight");
                if ((value == null)||(!value.equals(getFreight()))) {
                    setFreight(((BigDecimal) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipName")) {
                final Object value = cloudSdkValues.remove("ShipName");
                if ((value == null)||(!value.equals(getShipName()))) {
                    setShipName(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipAddress")) {
                final Object value = cloudSdkValues.remove("ShipAddress");
                if ((value == null)||(!value.equals(getShipAddress()))) {
                    setShipAddress(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipCity")) {
                final Object value = cloudSdkValues.remove("ShipCity");
                if ((value == null)||(!value.equals(getShipCity()))) {
                    setShipCity(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipRegion")) {
                final Object value = cloudSdkValues.remove("ShipRegion");
                if ((value == null)||(!value.equals(getShipRegion()))) {
                    setShipRegion(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipPostalCode")) {
                final Object value = cloudSdkValues.remove("ShipPostalCode");
                if ((value == null)||(!value.equals(getShipPostalCode()))) {
                    setShipPostalCode(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipCountry")) {
                final Object value = cloudSdkValues.remove("ShipCountry");
                if ((value == null)||(!value.equals(getShipCountry()))) {
                    setShipCountry(((java.lang.String) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
            if ((cloudSdkValues).containsKey("Customer")) {
                final Object cloudSdkValue = (cloudSdkValues).remove("Customer");
                if (cloudSdkValue instanceof Map) {
                    if (toCustomer == null) {
                        toCustomer = new Customer();
                    }
                    @SuppressWarnings("unchecked")
                    final Map<java.lang.String, Object> inputMap = ((Map<java.lang.String, Object> ) cloudSdkValue);
                    toCustomer.fromMap(inputMap);
                }
            }
            if ((cloudSdkValues).containsKey("Employee")) {
                final Object cloudSdkValue = (cloudSdkValues).remove("Employee");
                if (cloudSdkValue instanceof Map) {
                    if (toEmployee == null) {
                        toEmployee = new Employee();
                    }
                    @SuppressWarnings("unchecked")
                    final Map<java.lang.String, Object> inputMap = ((Map<java.lang.String, Object> ) cloudSdkValue);
                    toEmployee.fromMap(inputMap);
                }
            }
            if ((cloudSdkValues).containsKey("Order_Details")) {
                final Object cloudSdkValue = (cloudSdkValues).remove("Order_Details");
                if (cloudSdkValue instanceof Iterable) {
                    if (toOrder_Details == null) {
                        toOrder_Details = Lists.newArrayList();
                    } else {
                        toOrder_Details = Lists.newArrayList(toOrder_Details);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) cloudSdkValue)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        Order_Detail entity;
                        if (toOrder_Details.size()>i) {
                            entity = toOrder_Details.get(i);
                        } else {
                            entity = new Order_Detail();
                            toOrder_Details.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<java.lang.String, Object> inputMap = ((Map<java.lang.String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((cloudSdkValues).containsKey("Shipper")) {
                final Object cloudSdkValue = (cloudSdkValues).remove("Shipper");
                if (cloudSdkValue instanceof Map) {
                    if (toShipper == null) {
                        toShipper = new Shipper();
                    }
                    @SuppressWarnings("unchecked")
                    final Map<java.lang.String, Object> inputMap = ((Map<java.lang.String, Object> ) cloudSdkValue);
                    toShipper.fromMap(inputMap);
                }
            }
        }
        super.fromMap(cloudSdkValues);
    }

    @Override
    protected java.lang.String getDefaultServicePath() {
        return OdataService.DEFAULT_SERVICE_PATH;
    }

    @Nonnull
    @Override
    protected Map<java.lang.String, Object> toMapOfNavigationProperties() {
        final Map<java.lang.String, Object> cloudSdkValues = super.toMapOfNavigationProperties();
        if (toCustomer!= null) {
            (cloudSdkValues).put("Customer", toCustomer);
        }
        if (toEmployee!= null) {
            (cloudSdkValues).put("Employee", toEmployee);
        }
        if (toOrder_Details!= null) {
            (cloudSdkValues).put("Order_Details", toOrder_Details);
        }
        if (toShipper!= null) {
            (cloudSdkValues).put("Shipper", toShipper);
        }
        return cloudSdkValues;
    }

    /**
     * Retrieval of associated <b>Customer</b> entity (one to one). This corresponds to the OData navigation property <b>Customer</b>.
     * <p>
     * If the navigation property for an entity <b>Order</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>Customer</b> is already loaded, the result will contain the <b>Customer</b> entity. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<Customer> getCustomerIfPresent() {
        return Option.of(toCustomer);
    }

    /**
     * Overwrites the associated <b>Customer</b> entity for the loaded navigation property <b>Customer</b>.
     * 
     * @param cloudSdkValue
     *     New <b>Customer</b> entity.
     */
    public void setCustomer(final Customer cloudSdkValue) {
        toCustomer = cloudSdkValue;
    }

    /**
     * Retrieval of associated <b>Employee</b> entity (one to one). This corresponds to the OData navigation property <b>Employee</b>.
     * <p>
     * If the navigation property for an entity <b>Order</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>Employee</b> is already loaded, the result will contain the <b>Employee</b> entity. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<Employee> getEmployeeIfPresent() {
        return Option.of(toEmployee);
    }

    /**
     * Overwrites the associated <b>Employee</b> entity for the loaded navigation property <b>Employee</b>.
     * 
     * @param cloudSdkValue
     *     New <b>Employee</b> entity.
     */
    public void setEmployee(final Employee cloudSdkValue) {
        toEmployee = cloudSdkValue;
    }

    /**
     * Retrieval of associated <b>Order_Detail</b> entities (one to many). This corresponds to the OData navigation property <b>Order_Details</b>.
     * <p>
     * If the navigation property for an entity <b>Order</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>Order_Details</b> is already loaded, the result will contain the <b>Order_Detail</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<Order_Detail>> getOrder_DetailsIfPresent() {
        return Option.of(toOrder_Details);
    }

    /**
     * Overwrites the list of associated <b>Order_Detail</b> entities for the loaded navigation property <b>Order_Details</b>.
     * <p>
     * If the navigation property <b>Order_Details</b> of a queried <b>Order</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param cloudSdkValue
     *     List of <b>Order_Detail</b> entities.
     */
    public void setOrder_Details(
        @Nonnull
        final List<Order_Detail> cloudSdkValue) {
        if (toOrder_Details == null) {
            toOrder_Details = Lists.newArrayList();
        }
        toOrder_Details.clear();
        toOrder_Details.addAll(cloudSdkValue);
    }

    /**
     * Adds elements to the list of associated <b>Order_Detail</b> entities. This corresponds to the OData navigation property <b>Order_Details</b>.
     * <p>
     * If the navigation property <b>Order_Details</b> of a queried <b>Order</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>Order_Detail</b> entities.
     */
    public void addOrder_Details(Order_Detail... entity) {
        if (toOrder_Details == null) {
            toOrder_Details = Lists.newArrayList();
        }
        toOrder_Details.addAll(Lists.newArrayList(entity));
    }

    /**
     * Retrieval of associated <b>Shipper</b> entity (one to one). This corresponds to the OData navigation property <b>Shipper</b>.
     * <p>
     * If the navigation property for an entity <b>Order</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>Shipper</b> is already loaded, the result will contain the <b>Shipper</b> entity. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<Shipper> getShipperIfPresent() {
        return Option.of(toShipper);
    }

    /**
     * Overwrites the associated <b>Shipper</b> entity for the loaded navigation property <b>Shipper</b>.
     * 
     * @param cloudSdkValue
     *     New <b>Shipper</b> entity.
     */
    public void setShipper(final Shipper cloudSdkValue) {
        toShipper = cloudSdkValue;
    }


    /**
     * Helper class to allow for fluent creation of Order instances.
     * 
     */
    public final static class OrderBuilder {

        private Customer toCustomer;
        private Employee toEmployee;
        private List<Order_Detail> toOrder_Details = Lists.newArrayList();
        private Shipper toShipper;

        private Order.OrderBuilder toCustomer(final Customer cloudSdkValue) {
            toCustomer = cloudSdkValue;
            return this;
        }

        /**
         * Navigation property <b>Customer</b> for <b>Order</b> to single <b>Customer</b>.
         * 
         * @param cloudSdkValue
         *     The Customer to build this Order with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public Order.OrderBuilder customer(final Customer cloudSdkValue) {
            return toCustomer(cloudSdkValue);
        }

        private Order.OrderBuilder toEmployee(final Employee cloudSdkValue) {
            toEmployee = cloudSdkValue;
            return this;
        }

        /**
         * Navigation property <b>Employee</b> for <b>Order</b> to single <b>Employee</b>.
         * 
         * @param cloudSdkValue
         *     The Employee to build this Order with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public Order.OrderBuilder employee(final Employee cloudSdkValue) {
            return toEmployee(cloudSdkValue);
        }

        private Order.OrderBuilder toOrder_Details(final List<Order_Detail> cloudSdkValue) {
            toOrder_Details.addAll(cloudSdkValue);
            return this;
        }

        /**
         * Navigation property <b>Order_Details</b> for <b>Order</b> to multiple <b>Order_Detail</b>.
         * 
         * @param cloudSdkValue
         *     The Order_Details to build this Order with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public Order.OrderBuilder order_Details(Order_Detail... cloudSdkValue) {
            return toOrder_Details(Lists.newArrayList(cloudSdkValue));
        }

        private Order.OrderBuilder toShipper(final Shipper cloudSdkValue) {
            toShipper = cloudSdkValue;
            return this;
        }

        /**
         * Navigation property <b>Shipper</b> for <b>Order</b> to single <b>Shipper</b>.
         * 
         * @param cloudSdkValue
         *     The Shipper to build this Order with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public Order.OrderBuilder shipper(final Shipper cloudSdkValue) {
            return toShipper(cloudSdkValue);
        }

    }

}
