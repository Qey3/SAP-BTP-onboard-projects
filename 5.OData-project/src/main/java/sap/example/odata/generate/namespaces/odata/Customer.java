
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 5.16.0
 */

package sap.example.odata.generate.namespaces.odata;

import java.util.List;
import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.sap.cloud.sdk.datamodel.odata.client.request.ODataEntityKey;
import com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntity;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntitySet;
import com.sap.cloud.sdk.result.ElementName;
import io.vavr.control.Option;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import sap.example.odata.generate.services.OdataService;


/**
 * <p>Original entity name from the Odata EDM: <b>Customer</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.datamodel.odatav4.adapter.GsonVdmAdapterFactory.class)
@JsonSerialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectSerializer.class)
@JsonDeserialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectDeserializer.class)
public class Customer
    extends VdmEntity<Customer>
    implements VdmEntitySet
{

    @Getter
    private final java.lang.String odataType = "NorthwindModel.Customer";
    /**
     * Selector for all available fields of Customer.
     * 
     */
    public final static SimpleProperty<Customer> ALL_FIELDS = all();
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>CustomerID</b></p>
     * 
     * @return
     *     The customerID contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("CustomerID")
    private java.lang.String customerID;
    public final static SimpleProperty.String<Customer> CUSTOMER_ID = new SimpleProperty.String<Customer>(Customer.class, "CustomerID");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>CompanyName</b></p>
     * 
     * @return
     *     The companyName contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("CompanyName")
    private java.lang.String companyName;
    public final static SimpleProperty.String<Customer> COMPANY_NAME = new SimpleProperty.String<Customer>(Customer.class, "CompanyName");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ContactName</b></p>
     * 
     * @return
     *     The contactName contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ContactName")
    private java.lang.String contactName;
    public final static SimpleProperty.String<Customer> CONTACT_NAME = new SimpleProperty.String<Customer>(Customer.class, "ContactName");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ContactTitle</b></p>
     * 
     * @return
     *     The contactTitle contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ContactTitle")
    private java.lang.String contactTitle;
    public final static SimpleProperty.String<Customer> CONTACT_TITLE = new SimpleProperty.String<Customer>(Customer.class, "ContactTitle");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Address</b></p>
     * 
     * @return
     *     The address contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Address")
    private java.lang.String address;
    public final static SimpleProperty.String<Customer> ADDRESS = new SimpleProperty.String<Customer>(Customer.class, "Address");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>City</b></p>
     * 
     * @return
     *     The city contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("City")
    private java.lang.String city;
    public final static SimpleProperty.String<Customer> CITY = new SimpleProperty.String<Customer>(Customer.class, "City");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Region</b></p>
     * 
     * @return
     *     The region contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Region")
    private java.lang.String region;
    public final static SimpleProperty.String<Customer> REGION = new SimpleProperty.String<Customer>(Customer.class, "Region");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>PostalCode</b></p>
     * 
     * @return
     *     The postalCode contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("PostalCode")
    private java.lang.String postalCode;
    public final static SimpleProperty.String<Customer> POSTAL_CODE = new SimpleProperty.String<Customer>(Customer.class, "PostalCode");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Country</b></p>
     * 
     * @return
     *     The country contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Country")
    private java.lang.String country;
    public final static SimpleProperty.String<Customer> COUNTRY = new SimpleProperty.String<Customer>(Customer.class, "Country");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Phone</b></p>
     * 
     * @return
     *     The phone contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Phone")
    private java.lang.String phone;
    public final static SimpleProperty.String<Customer> PHONE = new SimpleProperty.String<Customer>(Customer.class, "Phone");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Fax</b></p>
     * 
     * @return
     *     The fax contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Fax")
    private java.lang.String fax;
    public final static SimpleProperty.String<Customer> FAX = new SimpleProperty.String<Customer>(Customer.class, "Fax");
    /**
     * Navigation property <b>Orders</b> for <b>Customer</b> to multiple <b>Order</b>.
     * 
     */
    @ElementName("Orders")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<Order> toOrders;
    /**
     * Navigation property <b>CustomerDemographics</b> for <b>Customer</b> to multiple <b>CustomerDemographic</b>.
     * 
     */
    @ElementName("CustomerDemographics")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<CustomerDemographic> toCustomerDemographics;
    /**
     * Use with available request builders to apply the <b>Orders</b> navigation property to query operations.
     * 
     */
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Collection<Customer, Order> TO_ORDERS = new com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Collection<Customer, Order>(Customer.class, "Orders", Order.class);
    /**
     * Use with available request builders to apply the <b>CustomerDemographics</b> navigation property to query operations.
     * 
     */
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Collection<Customer, CustomerDemographic> TO_CUSTOMER_DEMOGRAPHICS = new com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Collection<Customer, CustomerDemographic>(Customer.class, "CustomerDemographics", CustomerDemographic.class);

    @Nonnull
    @Override
    public Class<Customer> getType() {
        return Customer.class;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>CustomerID</b></p>
     * 
     * @param customerID
     *     The customerID to set.
     */
    public void setCustomerID(
        @Nullable
        final java.lang.String customerID) {
        rememberChangedField("CustomerID", this.customerID);
        this.customerID = customerID;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>CompanyName</b></p>
     * 
     * @param companyName
     *     The companyName to set.
     */
    public void setCompanyName(
        @Nullable
        final java.lang.String companyName) {
        rememberChangedField("CompanyName", this.companyName);
        this.companyName = companyName;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ContactName</b></p>
     * 
     * @param contactName
     *     The contactName to set.
     */
    public void setContactName(
        @Nullable
        final java.lang.String contactName) {
        rememberChangedField("ContactName", this.contactName);
        this.contactName = contactName;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ContactTitle</b></p>
     * 
     * @param contactTitle
     *     The contactTitle to set.
     */
    public void setContactTitle(
        @Nullable
        final java.lang.String contactTitle) {
        rememberChangedField("ContactTitle", this.contactTitle);
        this.contactTitle = contactTitle;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Address</b></p>
     * 
     * @param address
     *     The address to set.
     */
    public void setAddress(
        @Nullable
        final java.lang.String address) {
        rememberChangedField("Address", this.address);
        this.address = address;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>City</b></p>
     * 
     * @param city
     *     The city to set.
     */
    public void setCity(
        @Nullable
        final java.lang.String city) {
        rememberChangedField("City", this.city);
        this.city = city;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Region</b></p>
     * 
     * @param region
     *     The region to set.
     */
    public void setRegion(
        @Nullable
        final java.lang.String region) {
        rememberChangedField("Region", this.region);
        this.region = region;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>PostalCode</b></p>
     * 
     * @param postalCode
     *     The postalCode to set.
     */
    public void setPostalCode(
        @Nullable
        final java.lang.String postalCode) {
        rememberChangedField("PostalCode", this.postalCode);
        this.postalCode = postalCode;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Country</b></p>
     * 
     * @param country
     *     The country to set.
     */
    public void setCountry(
        @Nullable
        final java.lang.String country) {
        rememberChangedField("Country", this.country);
        this.country = country;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Phone</b></p>
     * 
     * @param phone
     *     The phone to set.
     */
    public void setPhone(
        @Nullable
        final java.lang.String phone) {
        rememberChangedField("Phone", this.phone);
        this.phone = phone;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Fax</b></p>
     * 
     * @param fax
     *     The fax to set.
     */
    public void setFax(
        @Nullable
        final java.lang.String fax) {
        rememberChangedField("Fax", this.fax);
        this.fax = fax;
    }

    @Override
    protected java.lang.String getEntityCollection() {
        return "Customers";
    }

    @Nonnull
    @Override
    protected ODataEntityKey getKey() {
        final ODataEntityKey entityKey = super.getKey();
        entityKey.addKeyProperty("CustomerID", getCustomerID());
        return entityKey;
    }

    @Nonnull
    @Override
    protected Map<java.lang.String, Object> toMapOfFields() {
        final Map<java.lang.String, Object> cloudSdkValues = super.toMapOfFields();
        cloudSdkValues.put("CustomerID", getCustomerID());
        cloudSdkValues.put("CompanyName", getCompanyName());
        cloudSdkValues.put("ContactName", getContactName());
        cloudSdkValues.put("ContactTitle", getContactTitle());
        cloudSdkValues.put("Address", getAddress());
        cloudSdkValues.put("City", getCity());
        cloudSdkValues.put("Region", getRegion());
        cloudSdkValues.put("PostalCode", getPostalCode());
        cloudSdkValues.put("Country", getCountry());
        cloudSdkValues.put("Phone", getPhone());
        cloudSdkValues.put("Fax", getFax());
        return cloudSdkValues;
    }

    @Override
    protected void fromMap(final Map<java.lang.String, Object> inputValues) {
        final Map<java.lang.String, Object> cloudSdkValues = Maps.newLinkedHashMap(inputValues);
        // simple properties
        {
            if (cloudSdkValues.containsKey("CustomerID")) {
                final Object value = cloudSdkValues.remove("CustomerID");
                if ((value == null)||(!value.equals(getCustomerID()))) {
                    setCustomerID(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("CompanyName")) {
                final Object value = cloudSdkValues.remove("CompanyName");
                if ((value == null)||(!value.equals(getCompanyName()))) {
                    setCompanyName(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ContactName")) {
                final Object value = cloudSdkValues.remove("ContactName");
                if ((value == null)||(!value.equals(getContactName()))) {
                    setContactName(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ContactTitle")) {
                final Object value = cloudSdkValues.remove("ContactTitle");
                if ((value == null)||(!value.equals(getContactTitle()))) {
                    setContactTitle(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("Address")) {
                final Object value = cloudSdkValues.remove("Address");
                if ((value == null)||(!value.equals(getAddress()))) {
                    setAddress(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("City")) {
                final Object value = cloudSdkValues.remove("City");
                if ((value == null)||(!value.equals(getCity()))) {
                    setCity(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("Region")) {
                final Object value = cloudSdkValues.remove("Region");
                if ((value == null)||(!value.equals(getRegion()))) {
                    setRegion(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("PostalCode")) {
                final Object value = cloudSdkValues.remove("PostalCode");
                if ((value == null)||(!value.equals(getPostalCode()))) {
                    setPostalCode(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("Country")) {
                final Object value = cloudSdkValues.remove("Country");
                if ((value == null)||(!value.equals(getCountry()))) {
                    setCountry(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("Phone")) {
                final Object value = cloudSdkValues.remove("Phone");
                if ((value == null)||(!value.equals(getPhone()))) {
                    setPhone(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("Fax")) {
                final Object value = cloudSdkValues.remove("Fax");
                if ((value == null)||(!value.equals(getFax()))) {
                    setFax(((java.lang.String) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
            if ((cloudSdkValues).containsKey("Orders")) {
                final Object cloudSdkValue = (cloudSdkValues).remove("Orders");
                if (cloudSdkValue instanceof Iterable) {
                    if (toOrders == null) {
                        toOrders = Lists.newArrayList();
                    } else {
                        toOrders = Lists.newArrayList(toOrders);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) cloudSdkValue)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        Order entity;
                        if (toOrders.size()>i) {
                            entity = toOrders.get(i);
                        } else {
                            entity = new Order();
                            toOrders.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<java.lang.String, Object> inputMap = ((Map<java.lang.String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((cloudSdkValues).containsKey("CustomerDemographics")) {
                final Object cloudSdkValue = (cloudSdkValues).remove("CustomerDemographics");
                if (cloudSdkValue instanceof Iterable) {
                    if (toCustomerDemographics == null) {
                        toCustomerDemographics = Lists.newArrayList();
                    } else {
                        toCustomerDemographics = Lists.newArrayList(toCustomerDemographics);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) cloudSdkValue)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        CustomerDemographic entity;
                        if (toCustomerDemographics.size()>i) {
                            entity = toCustomerDemographics.get(i);
                        } else {
                            entity = new CustomerDemographic();
                            toCustomerDemographics.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<java.lang.String, Object> inputMap = ((Map<java.lang.String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
        }
        super.fromMap(cloudSdkValues);
    }

    @Override
    protected java.lang.String getDefaultServicePath() {
        return OdataService.DEFAULT_SERVICE_PATH;
    }

    @Nonnull
    @Override
    protected Map<java.lang.String, Object> toMapOfNavigationProperties() {
        final Map<java.lang.String, Object> cloudSdkValues = super.toMapOfNavigationProperties();
        if (toOrders!= null) {
            (cloudSdkValues).put("Orders", toOrders);
        }
        if (toCustomerDemographics!= null) {
            (cloudSdkValues).put("CustomerDemographics", toCustomerDemographics);
        }
        return cloudSdkValues;
    }

    /**
     * Retrieval of associated <b>Order</b> entities (one to many). This corresponds to the OData navigation property <b>Orders</b>.
     * <p>
     * If the navigation property for an entity <b>Customer</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>Orders</b> is already loaded, the result will contain the <b>Order</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<Order>> getOrdersIfPresent() {
        return Option.of(toOrders);
    }

    /**
     * Overwrites the list of associated <b>Order</b> entities for the loaded navigation property <b>Orders</b>.
     * <p>
     * If the navigation property <b>Orders</b> of a queried <b>Customer</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param cloudSdkValue
     *     List of <b>Order</b> entities.
     */
    public void setOrders(
        @Nonnull
        final List<Order> cloudSdkValue) {
        if (toOrders == null) {
            toOrders = Lists.newArrayList();
        }
        toOrders.clear();
        toOrders.addAll(cloudSdkValue);
    }

    /**
     * Adds elements to the list of associated <b>Order</b> entities. This corresponds to the OData navigation property <b>Orders</b>.
     * <p>
     * If the navigation property <b>Orders</b> of a queried <b>Customer</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>Order</b> entities.
     */
    public void addOrders(Order... entity) {
        if (toOrders == null) {
            toOrders = Lists.newArrayList();
        }
        toOrders.addAll(Lists.newArrayList(entity));
    }

    /**
     * Retrieval of associated <b>CustomerDemographic</b> entities (one to many). This corresponds to the OData navigation property <b>CustomerDemographics</b>.
     * <p>
     * If the navigation property for an entity <b>Customer</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>CustomerDemographics</b> is already loaded, the result will contain the <b>CustomerDemographic</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<CustomerDemographic>> getCustomerDemographicsIfPresent() {
        return Option.of(toCustomerDemographics);
    }

    /**
     * Overwrites the list of associated <b>CustomerDemographic</b> entities for the loaded navigation property <b>CustomerDemographics</b>.
     * <p>
     * If the navigation property <b>CustomerDemographics</b> of a queried <b>Customer</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param cloudSdkValue
     *     List of <b>CustomerDemographic</b> entities.
     */
    public void setCustomerDemographics(
        @Nonnull
        final List<CustomerDemographic> cloudSdkValue) {
        if (toCustomerDemographics == null) {
            toCustomerDemographics = Lists.newArrayList();
        }
        toCustomerDemographics.clear();
        toCustomerDemographics.addAll(cloudSdkValue);
    }

    /**
     * Adds elements to the list of associated <b>CustomerDemographic</b> entities. This corresponds to the OData navigation property <b>CustomerDemographics</b>.
     * <p>
     * If the navigation property <b>CustomerDemographics</b> of a queried <b>Customer</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>CustomerDemographic</b> entities.
     */
    public void addCustomerDemographics(CustomerDemographic... entity) {
        if (toCustomerDemographics == null) {
            toCustomerDemographics = Lists.newArrayList();
        }
        toCustomerDemographics.addAll(Lists.newArrayList(entity));
    }


    /**
     * Helper class to allow for fluent creation of Customer instances.
     * 
     */
    public final static class CustomerBuilder {

        private List<Order> toOrders = Lists.newArrayList();
        private List<CustomerDemographic> toCustomerDemographics = Lists.newArrayList();

        private Customer.CustomerBuilder toOrders(final List<Order> cloudSdkValue) {
            toOrders.addAll(cloudSdkValue);
            return this;
        }

        /**
         * Navigation property <b>Orders</b> for <b>Customer</b> to multiple <b>Order</b>.
         * 
         * @param cloudSdkValue
         *     The Orders to build this Customer with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public Customer.CustomerBuilder orders(Order... cloudSdkValue) {
            return toOrders(Lists.newArrayList(cloudSdkValue));
        }

        private Customer.CustomerBuilder toCustomerDemographics(final List<CustomerDemographic> cloudSdkValue) {
            toCustomerDemographics.addAll(cloudSdkValue);
            return this;
        }

        /**
         * Navigation property <b>CustomerDemographics</b> for <b>Customer</b> to multiple <b>CustomerDemographic</b>.
         * 
         * @param cloudSdkValue
         *     The CustomerDemographics to build this Customer with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public Customer.CustomerBuilder customerDemographics(CustomerDemographic... cloudSdkValue) {
            return toCustomerDemographics(Lists.newArrayList(cloudSdkValue));
        }

    }

}
