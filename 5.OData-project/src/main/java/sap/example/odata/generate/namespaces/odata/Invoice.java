
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 5.16.0
 */

package sap.example.odata.generate.namespaces.odata;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.sap.cloud.sdk.datamodel.odata.client.request.ODataEntityKey;
import com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntity;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntitySet;
import com.sap.cloud.sdk.result.ElementName;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.ToString;
import sap.example.odata.generate.services.OdataService;


/**
 * <p>Original entity name from the Odata EDM: <b>Invoice</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.datamodel.odatav4.adapter.GsonVdmAdapterFactory.class)
@JsonSerialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectSerializer.class)
@JsonDeserialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectDeserializer.class)
public class Invoice
    extends VdmEntity<Invoice>
    implements VdmEntitySet
{

    @Getter
    private final java.lang.String odataType = "NorthwindModel.Invoice";
    /**
     * Selector for all available fields of Invoice.
     * 
     */
    public final static SimpleProperty<Invoice> ALL_FIELDS = all();
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipName</b></p>
     * 
     * @return
     *     The shipName contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipName")
    private java.lang.String shipName;
    public final static SimpleProperty.String<Invoice> SHIP_NAME = new SimpleProperty.String<Invoice>(Invoice.class, "ShipName");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipAddress</b></p>
     * 
     * @return
     *     The shipAddress contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipAddress")
    private java.lang.String shipAddress;
    public final static SimpleProperty.String<Invoice> SHIP_ADDRESS = new SimpleProperty.String<Invoice>(Invoice.class, "ShipAddress");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipCity</b></p>
     * 
     * @return
     *     The shipCity contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipCity")
    private java.lang.String shipCity;
    public final static SimpleProperty.String<Invoice> SHIP_CITY = new SimpleProperty.String<Invoice>(Invoice.class, "ShipCity");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipRegion</b></p>
     * 
     * @return
     *     The shipRegion contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipRegion")
    private java.lang.String shipRegion;
    public final static SimpleProperty.String<Invoice> SHIP_REGION = new SimpleProperty.String<Invoice>(Invoice.class, "ShipRegion");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipPostalCode</b></p>
     * 
     * @return
     *     The shipPostalCode contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipPostalCode")
    private java.lang.String shipPostalCode;
    public final static SimpleProperty.String<Invoice> SHIP_POSTAL_CODE = new SimpleProperty.String<Invoice>(Invoice.class, "ShipPostalCode");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipCountry</b></p>
     * 
     * @return
     *     The shipCountry contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipCountry")
    private java.lang.String shipCountry;
    public final static SimpleProperty.String<Invoice> SHIP_COUNTRY = new SimpleProperty.String<Invoice>(Invoice.class, "ShipCountry");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>CustomerID</b></p>
     * 
     * @return
     *     The customerID contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("CustomerID")
    private java.lang.String customerID;
    public final static SimpleProperty.String<Invoice> CUSTOMER_ID = new SimpleProperty.String<Invoice>(Invoice.class, "CustomerID");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>CustomerName</b></p>
     * 
     * @return
     *     The customerName contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("CustomerName")
    private java.lang.String customerName;
    public final static SimpleProperty.String<Invoice> CUSTOMER_NAME = new SimpleProperty.String<Invoice>(Invoice.class, "CustomerName");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Address</b></p>
     * 
     * @return
     *     The address contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Address")
    private java.lang.String address;
    public final static SimpleProperty.String<Invoice> ADDRESS = new SimpleProperty.String<Invoice>(Invoice.class, "Address");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>City</b></p>
     * 
     * @return
     *     The city contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("City")
    private java.lang.String city;
    public final static SimpleProperty.String<Invoice> CITY = new SimpleProperty.String<Invoice>(Invoice.class, "City");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Region</b></p>
     * 
     * @return
     *     The region contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Region")
    private java.lang.String region;
    public final static SimpleProperty.String<Invoice> REGION = new SimpleProperty.String<Invoice>(Invoice.class, "Region");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>PostalCode</b></p>
     * 
     * @return
     *     The postalCode contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("PostalCode")
    private java.lang.String postalCode;
    public final static SimpleProperty.String<Invoice> POSTAL_CODE = new SimpleProperty.String<Invoice>(Invoice.class, "PostalCode");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Country</b></p>
     * 
     * @return
     *     The country contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Country")
    private java.lang.String country;
    public final static SimpleProperty.String<Invoice> COUNTRY = new SimpleProperty.String<Invoice>(Invoice.class, "Country");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>Salesperson</b></p>
     * 
     * @return
     *     The salesperson contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Salesperson")
    private java.lang.String salesperson;
    public final static SimpleProperty.String<Invoice> SALESPERSON = new SimpleProperty.String<Invoice>(Invoice.class, "Salesperson");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>OrderID</b></p>
     * 
     * @return
     *     The orderID contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("OrderID")
    private Integer orderID;
    public final static SimpleProperty.NumericInteger<Invoice> ORDER_ID = new SimpleProperty.NumericInteger<Invoice>(Invoice.class, "OrderID");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>OrderDate</b></p>
     * 
     * @return
     *     The orderDate contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("OrderDate")
    private OffsetDateTime orderDate;
    public final static SimpleProperty.DateTime<Invoice> ORDER_DATE = new SimpleProperty.DateTime<Invoice>(Invoice.class, "OrderDate");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>RequiredDate</b></p>
     * 
     * @return
     *     The requiredDate contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("RequiredDate")
    private OffsetDateTime requiredDate;
    public final static SimpleProperty.DateTime<Invoice> REQUIRED_DATE = new SimpleProperty.DateTime<Invoice>(Invoice.class, "RequiredDate");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShippedDate</b></p>
     * 
     * @return
     *     The shippedDate contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShippedDate")
    private OffsetDateTime shippedDate;
    public final static SimpleProperty.DateTime<Invoice> SHIPPED_DATE = new SimpleProperty.DateTime<Invoice>(Invoice.class, "ShippedDate");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>ShipperName</b></p>
     * 
     * @return
     *     The shipperName contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ShipperName")
    private java.lang.String shipperName;
    public final static SimpleProperty.String<Invoice> SHIPPER_NAME = new SimpleProperty.String<Invoice>(Invoice.class, "ShipperName");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>ProductID</b></p>
     * 
     * @return
     *     The productID contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ProductID")
    private Integer productID;
    public final static SimpleProperty.NumericInteger<Invoice> PRODUCT_ID = new SimpleProperty.NumericInteger<Invoice>(Invoice.class, "ProductID");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>ProductName</b></p>
     * 
     * @return
     *     The productName contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ProductName")
    private java.lang.String productName;
    public final static SimpleProperty.String<Invoice> PRODUCT_NAME = new SimpleProperty.String<Invoice>(Invoice.class, "ProductName");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>UnitPrice</b></p>
     * 
     * @return
     *     The unitPrice contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("UnitPrice")
    private BigDecimal unitPrice;
    public final static SimpleProperty.NumericDecimal<Invoice> UNIT_PRICE = new SimpleProperty.NumericDecimal<Invoice>(Invoice.class, "UnitPrice");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>Quantity</b></p>
     * 
     * @return
     *     The quantity contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Quantity")
    private Short quantity;
    public final static SimpleProperty.NumericInteger<Invoice> QUANTITY = new SimpleProperty.NumericInteger<Invoice>(Invoice.class, "Quantity");
    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>Discount</b></p>
     * 
     * @return
     *     The discount contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Discount")
    private Float discount;
    public final static SimpleProperty.NumericDecimal<Invoice> DISCOUNT = new SimpleProperty.NumericDecimal<Invoice>(Invoice.class, "Discount");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ExtendedPrice</b></p>
     * 
     * @return
     *     The extendedPrice contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("ExtendedPrice")
    private BigDecimal extendedPrice;
    public final static SimpleProperty.NumericDecimal<Invoice> EXTENDED_PRICE = new SimpleProperty.NumericDecimal<Invoice>(Invoice.class, "ExtendedPrice");
    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Freight</b></p>
     * 
     * @return
     *     The freight contained in this {@link VdmEntity}.
     */
    @Nullable
    @ElementName("Freight")
    private BigDecimal freight;
    public final static SimpleProperty.NumericDecimal<Invoice> FREIGHT = new SimpleProperty.NumericDecimal<Invoice>(Invoice.class, "Freight");

    @Nonnull
    @Override
    public Class<Invoice> getType() {
        return Invoice.class;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipName</b></p>
     * 
     * @param shipName
     *     The shipName to set.
     */
    public void setShipName(
        @Nullable
        final java.lang.String shipName) {
        rememberChangedField("ShipName", this.shipName);
        this.shipName = shipName;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipAddress</b></p>
     * 
     * @param shipAddress
     *     The shipAddress to set.
     */
    public void setShipAddress(
        @Nullable
        final java.lang.String shipAddress) {
        rememberChangedField("ShipAddress", this.shipAddress);
        this.shipAddress = shipAddress;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipCity</b></p>
     * 
     * @param shipCity
     *     The shipCity to set.
     */
    public void setShipCity(
        @Nullable
        final java.lang.String shipCity) {
        rememberChangedField("ShipCity", this.shipCity);
        this.shipCity = shipCity;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipRegion</b></p>
     * 
     * @param shipRegion
     *     The shipRegion to set.
     */
    public void setShipRegion(
        @Nullable
        final java.lang.String shipRegion) {
        rememberChangedField("ShipRegion", this.shipRegion);
        this.shipRegion = shipRegion;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipPostalCode</b></p>
     * 
     * @param shipPostalCode
     *     The shipPostalCode to set.
     */
    public void setShipPostalCode(
        @Nullable
        final java.lang.String shipPostalCode) {
        rememberChangedField("ShipPostalCode", this.shipPostalCode);
        this.shipPostalCode = shipPostalCode;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShipCountry</b></p>
     * 
     * @param shipCountry
     *     The shipCountry to set.
     */
    public void setShipCountry(
        @Nullable
        final java.lang.String shipCountry) {
        rememberChangedField("ShipCountry", this.shipCountry);
        this.shipCountry = shipCountry;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>CustomerID</b></p>
     * 
     * @param customerID
     *     The customerID to set.
     */
    public void setCustomerID(
        @Nullable
        final java.lang.String customerID) {
        rememberChangedField("CustomerID", this.customerID);
        this.customerID = customerID;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>CustomerName</b></p>
     * 
     * @param customerName
     *     The customerName to set.
     */
    public void setCustomerName(
        @Nullable
        final java.lang.String customerName) {
        rememberChangedField("CustomerName", this.customerName);
        this.customerName = customerName;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Address</b></p>
     * 
     * @param address
     *     The address to set.
     */
    public void setAddress(
        @Nullable
        final java.lang.String address) {
        rememberChangedField("Address", this.address);
        this.address = address;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>City</b></p>
     * 
     * @param city
     *     The city to set.
     */
    public void setCity(
        @Nullable
        final java.lang.String city) {
        rememberChangedField("City", this.city);
        this.city = city;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Region</b></p>
     * 
     * @param region
     *     The region to set.
     */
    public void setRegion(
        @Nullable
        final java.lang.String region) {
        rememberChangedField("Region", this.region);
        this.region = region;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>PostalCode</b></p>
     * 
     * @param postalCode
     *     The postalCode to set.
     */
    public void setPostalCode(
        @Nullable
        final java.lang.String postalCode) {
        rememberChangedField("PostalCode", this.postalCode);
        this.postalCode = postalCode;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Country</b></p>
     * 
     * @param country
     *     The country to set.
     */
    public void setCountry(
        @Nullable
        final java.lang.String country) {
        rememberChangedField("Country", this.country);
        this.country = country;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>Salesperson</b></p>
     * 
     * @param salesperson
     *     The salesperson to set.
     */
    public void setSalesperson(
        @Nullable
        final java.lang.String salesperson) {
        rememberChangedField("Salesperson", this.salesperson);
        this.salesperson = salesperson;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>OrderID</b></p>
     * 
     * @param orderID
     *     The orderID to set.
     */
    public void setOrderID(
        @Nullable
        final Integer orderID) {
        rememberChangedField("OrderID", this.orderID);
        this.orderID = orderID;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>OrderDate</b></p>
     * 
     * @param orderDate
     *     The orderDate to set.
     */
    public void setOrderDate(
        @Nullable
        final OffsetDateTime orderDate) {
        rememberChangedField("OrderDate", this.orderDate);
        this.orderDate = orderDate;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>RequiredDate</b></p>
     * 
     * @param requiredDate
     *     The requiredDate to set.
     */
    public void setRequiredDate(
        @Nullable
        final OffsetDateTime requiredDate) {
        rememberChangedField("RequiredDate", this.requiredDate);
        this.requiredDate = requiredDate;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ShippedDate</b></p>
     * 
     * @param shippedDate
     *     The shippedDate to set.
     */
    public void setShippedDate(
        @Nullable
        final OffsetDateTime shippedDate) {
        rememberChangedField("ShippedDate", this.shippedDate);
        this.shippedDate = shippedDate;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>ShipperName</b></p>
     * 
     * @param shipperName
     *     The shipperName to set.
     */
    public void setShipperName(
        @Nullable
        final java.lang.String shipperName) {
        rememberChangedField("ShipperName", this.shipperName);
        this.shipperName = shipperName;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>ProductID</b></p>
     * 
     * @param productID
     *     The productID to set.
     */
    public void setProductID(
        @Nullable
        final Integer productID) {
        rememberChangedField("ProductID", this.productID);
        this.productID = productID;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>ProductName</b></p>
     * 
     * @param productName
     *     The productName to set.
     */
    public void setProductName(
        @Nullable
        final java.lang.String productName) {
        rememberChangedField("ProductName", this.productName);
        this.productName = productName;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>UnitPrice</b></p>
     * 
     * @param unitPrice
     *     The unitPrice to set.
     */
    public void setUnitPrice(
        @Nullable
        final BigDecimal unitPrice) {
        rememberChangedField("UnitPrice", this.unitPrice);
        this.unitPrice = unitPrice;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>Quantity</b></p>
     * 
     * @param quantity
     *     The quantity to set.
     */
    public void setQuantity(
        @Nullable
        final Short quantity) {
        rememberChangedField("Quantity", this.quantity);
        this.quantity = quantity;
    }

    /**
     * (Key Field) Constraints: Not nullable<p>Original property name from the Odata EDM: <b>Discount</b></p>
     * 
     * @param discount
     *     The discount to set.
     */
    public void setDiscount(
        @Nullable
        final Float discount) {
        rememberChangedField("Discount", this.discount);
        this.discount = discount;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>ExtendedPrice</b></p>
     * 
     * @param extendedPrice
     *     The extendedPrice to set.
     */
    public void setExtendedPrice(
        @Nullable
        final BigDecimal extendedPrice) {
        rememberChangedField("ExtendedPrice", this.extendedPrice);
        this.extendedPrice = extendedPrice;
    }

    /**
     * Constraints: Nullable<p>Original property name from the Odata EDM: <b>Freight</b></p>
     * 
     * @param freight
     *     The freight to set.
     */
    public void setFreight(
        @Nullable
        final BigDecimal freight) {
        rememberChangedField("Freight", this.freight);
        this.freight = freight;
    }

    @Override
    protected java.lang.String getEntityCollection() {
        return "Invoices";
    }

    @Nonnull
    @Override
    protected ODataEntityKey getKey() {
        final ODataEntityKey entityKey = super.getKey();
        entityKey.addKeyProperty("CustomerName", getCustomerName());
        entityKey.addKeyProperty("Salesperson", getSalesperson());
        entityKey.addKeyProperty("OrderID", getOrderID());
        entityKey.addKeyProperty("ShipperName", getShipperName());
        entityKey.addKeyProperty("ProductID", getProductID());
        entityKey.addKeyProperty("ProductName", getProductName());
        entityKey.addKeyProperty("UnitPrice", getUnitPrice());
        entityKey.addKeyProperty("Quantity", getQuantity());
        entityKey.addKeyProperty("Discount", getDiscount());
        return entityKey;
    }

    @Nonnull
    @Override
    protected Map<java.lang.String, Object> toMapOfFields() {
        final Map<java.lang.String, Object> cloudSdkValues = super.toMapOfFields();
        cloudSdkValues.put("ShipName", getShipName());
        cloudSdkValues.put("ShipAddress", getShipAddress());
        cloudSdkValues.put("ShipCity", getShipCity());
        cloudSdkValues.put("ShipRegion", getShipRegion());
        cloudSdkValues.put("ShipPostalCode", getShipPostalCode());
        cloudSdkValues.put("ShipCountry", getShipCountry());
        cloudSdkValues.put("CustomerID", getCustomerID());
        cloudSdkValues.put("CustomerName", getCustomerName());
        cloudSdkValues.put("Address", getAddress());
        cloudSdkValues.put("City", getCity());
        cloudSdkValues.put("Region", getRegion());
        cloudSdkValues.put("PostalCode", getPostalCode());
        cloudSdkValues.put("Country", getCountry());
        cloudSdkValues.put("Salesperson", getSalesperson());
        cloudSdkValues.put("OrderID", getOrderID());
        cloudSdkValues.put("OrderDate", getOrderDate());
        cloudSdkValues.put("RequiredDate", getRequiredDate());
        cloudSdkValues.put("ShippedDate", getShippedDate());
        cloudSdkValues.put("ShipperName", getShipperName());
        cloudSdkValues.put("ProductID", getProductID());
        cloudSdkValues.put("ProductName", getProductName());
        cloudSdkValues.put("UnitPrice", getUnitPrice());
        cloudSdkValues.put("Quantity", getQuantity());
        cloudSdkValues.put("Discount", getDiscount());
        cloudSdkValues.put("ExtendedPrice", getExtendedPrice());
        cloudSdkValues.put("Freight", getFreight());
        return cloudSdkValues;
    }

    @Override
    protected void fromMap(final Map<java.lang.String, Object> inputValues) {
        final Map<java.lang.String, Object> cloudSdkValues = Maps.newLinkedHashMap(inputValues);
        // simple properties
        {
            if (cloudSdkValues.containsKey("ShipName")) {
                final Object value = cloudSdkValues.remove("ShipName");
                if ((value == null)||(!value.equals(getShipName()))) {
                    setShipName(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipAddress")) {
                final Object value = cloudSdkValues.remove("ShipAddress");
                if ((value == null)||(!value.equals(getShipAddress()))) {
                    setShipAddress(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipCity")) {
                final Object value = cloudSdkValues.remove("ShipCity");
                if ((value == null)||(!value.equals(getShipCity()))) {
                    setShipCity(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipRegion")) {
                final Object value = cloudSdkValues.remove("ShipRegion");
                if ((value == null)||(!value.equals(getShipRegion()))) {
                    setShipRegion(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipPostalCode")) {
                final Object value = cloudSdkValues.remove("ShipPostalCode");
                if ((value == null)||(!value.equals(getShipPostalCode()))) {
                    setShipPostalCode(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipCountry")) {
                final Object value = cloudSdkValues.remove("ShipCountry");
                if ((value == null)||(!value.equals(getShipCountry()))) {
                    setShipCountry(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("CustomerID")) {
                final Object value = cloudSdkValues.remove("CustomerID");
                if ((value == null)||(!value.equals(getCustomerID()))) {
                    setCustomerID(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("CustomerName")) {
                final Object value = cloudSdkValues.remove("CustomerName");
                if ((value == null)||(!value.equals(getCustomerName()))) {
                    setCustomerName(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("Address")) {
                final Object value = cloudSdkValues.remove("Address");
                if ((value == null)||(!value.equals(getAddress()))) {
                    setAddress(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("City")) {
                final Object value = cloudSdkValues.remove("City");
                if ((value == null)||(!value.equals(getCity()))) {
                    setCity(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("Region")) {
                final Object value = cloudSdkValues.remove("Region");
                if ((value == null)||(!value.equals(getRegion()))) {
                    setRegion(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("PostalCode")) {
                final Object value = cloudSdkValues.remove("PostalCode");
                if ((value == null)||(!value.equals(getPostalCode()))) {
                    setPostalCode(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("Country")) {
                final Object value = cloudSdkValues.remove("Country");
                if ((value == null)||(!value.equals(getCountry()))) {
                    setCountry(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("Salesperson")) {
                final Object value = cloudSdkValues.remove("Salesperson");
                if ((value == null)||(!value.equals(getSalesperson()))) {
                    setSalesperson(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("OrderID")) {
                final Object value = cloudSdkValues.remove("OrderID");
                if ((value == null)||(!value.equals(getOrderID()))) {
                    setOrderID(((Integer) value));
                }
            }
            if (cloudSdkValues.containsKey("OrderDate")) {
                final Object value = cloudSdkValues.remove("OrderDate");
                if ((value == null)||(!value.equals(getOrderDate()))) {
                    setOrderDate(((OffsetDateTime) value));
                }
            }
            if (cloudSdkValues.containsKey("RequiredDate")) {
                final Object value = cloudSdkValues.remove("RequiredDate");
                if ((value == null)||(!value.equals(getRequiredDate()))) {
                    setRequiredDate(((OffsetDateTime) value));
                }
            }
            if (cloudSdkValues.containsKey("ShippedDate")) {
                final Object value = cloudSdkValues.remove("ShippedDate");
                if ((value == null)||(!value.equals(getShippedDate()))) {
                    setShippedDate(((OffsetDateTime) value));
                }
            }
            if (cloudSdkValues.containsKey("ShipperName")) {
                final Object value = cloudSdkValues.remove("ShipperName");
                if ((value == null)||(!value.equals(getShipperName()))) {
                    setShipperName(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("ProductID")) {
                final Object value = cloudSdkValues.remove("ProductID");
                if ((value == null)||(!value.equals(getProductID()))) {
                    setProductID(((Integer) value));
                }
            }
            if (cloudSdkValues.containsKey("ProductName")) {
                final Object value = cloudSdkValues.remove("ProductName");
                if ((value == null)||(!value.equals(getProductName()))) {
                    setProductName(((java.lang.String) value));
                }
            }
            if (cloudSdkValues.containsKey("UnitPrice")) {
                final Object value = cloudSdkValues.remove("UnitPrice");
                if ((value == null)||(!value.equals(getUnitPrice()))) {
                    setUnitPrice(((BigDecimal) value));
                }
            }
            if (cloudSdkValues.containsKey("Quantity")) {
                final Object value = cloudSdkValues.remove("Quantity");
                if ((value == null)||(!value.equals(getQuantity()))) {
                    setQuantity(((Short) value));
                }
            }
            if (cloudSdkValues.containsKey("Discount")) {
                final Object value = cloudSdkValues.remove("Discount");
                if ((value == null)||(!value.equals(getDiscount()))) {
                    setDiscount(((Float) value));
                }
            }
            if (cloudSdkValues.containsKey("ExtendedPrice")) {
                final Object value = cloudSdkValues.remove("ExtendedPrice");
                if ((value == null)||(!value.equals(getExtendedPrice()))) {
                    setExtendedPrice(((BigDecimal) value));
                }
            }
            if (cloudSdkValues.containsKey("Freight")) {
                final Object value = cloudSdkValues.remove("Freight");
                if ((value == null)||(!value.equals(getFreight()))) {
                    setFreight(((BigDecimal) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
        }
        super.fromMap(cloudSdkValues);
    }

    @Override
    protected java.lang.String getDefaultServicePath() {
        return OdataService.DEFAULT_SERVICE_PATH;
    }

}
